{"version":3,"sources":["utils/datetime.js","components/createDialog.js","components/viewDialog.js","utils/apicall.js","components/calendar.js","styles/sidebar.js","i18n/lang_ko.js","i18n/lang_en.js","components/customizedMenu.js","components/confirm.js","i18n/init.js","App.js","utils/etc.js","serviceWorker.js","index.js"],"names":["datetime","dayLabel","en","ko","getDayName","dow","country","Object","keys","this","includes","toLuxon","a","DateTime","fromJSDate","Date","palette","IndianRed","Crimson","Tomato","Gold","Magenta","RebeccaPurple","Indigo","Lime","ForestGreen","SaddleBrown","CreateDialog","setOpen","addEvent","defaultSettings","categoryList","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","React","useState","title","setTitle","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","allDay","setAllDay","importance","setImportance","category","setCategory","place","setPlace","color","setColor","useEffect","start","fromISO","local","end","plus","minutes","handleClose","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Container","Select","value","onChange","event","target","map","item","MenuItem","Grid","container","Input","autoFocus","placeholder","onChangeCapture","FormControlLabel","control","Checkbox","checked","name","label","utils","LuxonUtils","justify","DateTimePicker","margin","format","date","onSelect","DialogActions","Button","onClick","isAllDay","eventInfo","toISO","trim","forceAllDay","display","ViewDialog","deleteEvent","editEvent","editFlag","setEditFlag","classes","makeStyles","marginIcon","marginLeft","useStyles","nvl","str","defaultStr","style","textAlign","IconButton","className","aria-label","extendedProps","startStr","endStr","editInfo","type","height","dividers","calendarId","apiKey","url","localforage","getItem","axios","get","response","status","setItem","data","items","touchStartX","touchStartY","touchEndX","touchEndY","touchStartTime","Calendar","setter","calendarRef","locale","lunar","holiday","minDurationMinutes","slotDuration","focusDate","events","changeEvent","googleApiKey","selectLongPressDelay","createDialogOpen","setCreateDialogOpen","viewDialogOpen","setViewDialogOpen","setDefaultSettings","setEvent","holidayList","setHolidayList","handleGesture","useCallback","current","diffNow","milliseconds","deltaX","Math","abs","deltaY","getApi","next","prev","handleTouchStart","e","changedTouches","screenX","screenY","handleTouchEnd","isNaN","window","innerHeight","clientHeight","setOption","document","querySelector","addEventListener","removeEventListener","CalendarGlobalStyle","ref","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","luxonPlugin","rrulePlugin","listPlugin","headerToolbar","initialView","nowIndicator","titleFormat","buttonIcons","firstDay","navLinks","editable","selectable","selectMirror","dayMaxEvents","dayMaxEventRows","slotLabelInterval","slotEventOverlap","slice","select","selectInfo","toISOString","dateClick","info","dateStr","view","days","eventContent","ext","width","flexShrink","backgroundColor","tagColor","EventContent","ScheduleTime","split","ScheduleTitle","eventClick","clickInfo","eventChange","changeInfo","oldEvent","fixedWeekCount","datesSet","dateInfo","focusInLuxon","currentStart","currentEnd","setFocusDate","toISODate","viewType","year","month","Y","M","D","startY","startM","endY","endM","getHoliday","then","holidays","forEach","push","summary","catch","console","error","allDayText","moreLinkText","dayHeaderContent","content","text","Hidden","xsDown","fontSize","paddingLeft","getLunar","day","smUp","dayCellContent","getDate","allDayMaintainDuration","navLinkDayClick","changeView","setViewType","unselectAuto","unselectCancel","selectAllow","dragScroll","progressiveEventRendering","defaultProps","styled","div","span","createGlobalStyle","sidebarStyles","list","fullList","root","marginRight","yearMonth","flexGrow","translation","week","calendar","today","defaultCalendar","importCalendar","newCalendar","DELETE","Ok","Delete","Cancel","Information","StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","primary","main","common","white","CustomizedMenus","t","handleColorChange","handleDelete","anchorEl","setAnchorEl","currentTarget","edge","keepMounted","Boolean","ListItemIcon","ListItemText","AlertDialog","handleOkClick","okText","cancelText","aria-describedby","ColorPicker","initialColor","i18n","use","initReactI18next","init","resources","lng","fallbackLng","interpolation","escapeValue","observable","maxId","categories","store","persist","schema","show","Number","i","length","splice","create","hydrate","addCategory","categoryName","arr","filter","paletteKeys","colorName","floor","random","filterEvents","find","App","observer","left","state","setState","createRef","useLocalStorage","setLunar","setHoliday","language","setLanguage","alert","setAlert","colorPopup","setColorPopup","useTranslation","changeLanguage","gotoDate","anchor","toggleDrawer","key","handleLunarChange","String","handleHolidayChange","AppBar","position","Toolbar","Typography","variant","labelId","SwipeableDrawer","onOpen","clsx","role","onKeyDown","List","index","ListItem","selected","button","Divider","handleCategoryChange","newCategoryList","newEvents","deleteCategory","newObj","changeCategoryColor","prompt","marginTop","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1096249f.chunk.js","sourcesContent":["import { DateTime } from 'luxon';\r\n\r\nconst datetime = {\r\n  dayLabel: {\r\n    en: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    ko: ['일', '월', '화', '수', '목', '금', '토'],\r\n  },\r\n  getDayName(dow, country) {\r\n    if (Object.keys(this.dayLabel).includes(country)) {\r\n      return this.dayLabel[country][dow];\r\n    }\r\n    return this.dayLabel.en.dow;\r\n  },\r\n  toLuxon(a) {\r\n    return DateTime.fromJSDate(new Date(a));\r\n  },\r\n};\r\n\r\nexport default datetime;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Container, Input, MenuItem, Select } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport { DateTime } from 'luxon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { ColorPalette } from 'material-ui-color';\r\n\r\nconst palette = {\r\n  IndianRed: '#CD5C5C',\r\n  Crimson: '#DC143C',\r\n  Tomato: '#FF6347',\r\n  Gold: '#FFD700',\r\n  Magenta: '#FF00FF',\r\n  RebeccaPurple: '#663399',\r\n  Indigo: '#4B0082',\r\n  Lime: '#00FF00',\r\n  ForestGreen: '#228B22',\r\n  SaddleBrown: '#8B4513',\r\n};\r\n\r\nconst CreateDialogComponent = ({ setOpen, addEvent, defaultSettings, categoryList }) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const [title, setTitle] = React.useState();\r\n  const [selectedStartDate, setSelectedStartDate] = React.useState();\r\n  const [selectedEndDate, setSelectedEndDate] = React.useState();\r\n  const [allDay, setAllDay] = React.useState(false);\r\n  const [importance, setImportance] = React.useState();\r\n  const [category, setCategory] = React.useState('default');\r\n  const [place, setPlace] = React.useState();\r\n  const [color, setColor] = React.useState('black');\r\n\r\n  React.useEffect(() => {\r\n    setTitle('');\r\n    setPlace('');\r\n    if (defaultSettings && defaultSettings.start) {\r\n      setSelectedStartDate(DateTime.fromISO(defaultSettings.start));\r\n    } else {\r\n      setSelectedStartDate(DateTime.local());\r\n    }\r\n    if (defaultSettings && defaultSettings.end) {\r\n      setSelectedEndDate(DateTime.fromISO(defaultSettings.end));\r\n    } else {\r\n      setSelectedEndDate(DateTime.local().plus({ minutes: 30 }));\r\n    }\r\n    if (defaultSettings && defaultSettings.allDay) {\r\n      setAllDay(true);\r\n    } else {\r\n      setAllDay(false);\r\n    }\r\n    if (defaultSettings && defaultSettings.importance) {\r\n      setImportance(true);\r\n    } else {\r\n      setImportance(false);\r\n    }\r\n    if (defaultSettings && defaultSettings.category) {\r\n      setCategory(defaultSettings.category);\r\n    }\r\n  }, [defaultSettings]);\r\n\r\n  const handleStartDateChange = date => {\r\n    setSelectedStartDate(date);\r\n  };\r\n\r\n  const handleEndDateChange = date => {\r\n    setSelectedEndDate(date);\r\n  };\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleSave() {\r\n    const isAllDay = (selectedEndDate - selectedStartDate) / (60 * 60 * 1000) >= 24;\r\n    const eventInfo = {\r\n      start: selectedStartDate.toISO(),\r\n      end: selectedEndDate.toISO(),\r\n      importance,\r\n      title: title.trim() === '' ? '(제목없음)' : title,\r\n      allDay: allDay || isAllDay,\r\n      place,\r\n      forceAllDay: allDay,\r\n      color,\r\n      category,\r\n      display: 'block',\r\n    };\r\n    addEvent(eventInfo);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleTitle = event => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleAllDayChange = event => {\r\n    setAllDay(event.target.checked);\r\n  };\r\n\r\n  const handleimportanceChange = event => {\r\n    setImportance(event.target.checked);\r\n  };\r\n  const handlePlaceChange = event => {\r\n    setPlace(event.target.value);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      open\r\n      onClose={handleClose}\r\n      aria-labelledby=\"responsive-create-dialog\"\r\n    >\r\n      <DialogTitle id=\"responsive-dialog-title\">새 일정</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          {categoryList && (\r\n            <Container>\r\n              <Select value={category} onChange={handleChange}>\r\n                {categoryList.map(item => (\r\n                  <MenuItem value={item}>{item === 'default' ? '기본 캘린더' : item}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Container>\r\n          )}\r\n          <Container>\r\n            <Grid container>\r\n              <Input\r\n                autoFocus\r\n                placeholder=\"제목을 입력해주세요\"\r\n                value={title}\r\n                onChangeCapture={handleTitle}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={allDay} onChange={handleAllDayChange} name=\"allDay\" />}\r\n                label=\"종일\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={importance}\r\n                    onChange={handleimportanceChange}\r\n                    name=\"importance\"\r\n                  />\r\n                }\r\n                label=\"중요\"\r\n              />\r\n            </Grid>\r\n          </Container>\r\n          <Container>\r\n            <MuiPickersUtilsProvider utils={LuxonUtils}>\r\n              <Grid container justify=\"space-around\">\r\n                <DateTimePicker\r\n                  margin=\"normal\"\r\n                  id=\"create-datetime-picker\"\r\n                  label=\"시작 날짜 시간\"\r\n                  format=\"yyyy-MM-dd HH:mm:ss\"\r\n                  value={selectedStartDate}\r\n                  onChange={handleStartDateChange}\r\n                />\r\n                <DateTimePicker\r\n                  margin=\"normal\"\r\n                  id=\"end-datetime-picker\"\r\n                  label=\"끝 날짜 시간\"\r\n                  format=\"yyyy-MM-dd HH:mm:ss\"\r\n                  value={selectedEndDate}\r\n                  onChange={handleEndDateChange}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Container>\r\n          <Container>\r\n            <Input placeholder=\"장소를 입력해주세요\" value={place} onChange={handlePlaceChange} />\r\n          </Container>\r\n          <Container>\r\n            <ColorPalette palette={palette} value={color} onSelect={setColor} />\r\n          </Container>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"secondary\">\r\n          취소\r\n        </Button>\r\n        <Button onClick={handleSave} color=\"primary\">\r\n          저장\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const CreateDialog = CreateDialogComponent;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  DialogContentText,\r\n  Grid,\r\n  Input,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\r\nimport LuxonUtils from '@date-io/luxon';\r\nimport { ColorPalette } from 'material-ui-color';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst ViewDialogComponent = ({ setOpen, event, deleteEvent, editEvent }) => {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const [title, setTitle] = React.useState();\r\n  const [selectedStartDate, setSelectedStartDate] = React.useState();\r\n  const [selectedEndDate, setSelectedEndDate] = React.useState();\r\n  const [allDay, setAllDay] = React.useState(false);\r\n  const [importance, setImportance] = React.useState();\r\n  const [place, setPlace] = React.useState();\r\n  const [color, setColor] = React.useState('black');\r\n  const [editFlag, setEditFlag] = React.useState(false);\r\n\r\n  const palette = {\r\n    IndianRed: '#CD5C5C',\r\n    Crimson: '#DC143C',\r\n    Tomato: '#FF6347',\r\n    Gold: '#FFD700',\r\n    Magenta: '#FF00FF',\r\n    RebeccaPurple: '#663399',\r\n    Indigo: '#4B0082',\r\n    Lime: '#00FF00',\r\n    ForestGreen: '#228B22',\r\n    SaddleBrown: '#8B4513',\r\n  };\r\n\r\n  function handleSave() {\r\n    const isAllDay = (selectedEndDate - selectedStartDate) / (60 * 60 * 1000) >= 24;\r\n\r\n    const editInfo = {\r\n      type: 'list',\r\n      id: event.id,\r\n      title: event.title,\r\n      start: event.startStr,\r\n      end: event.endStr,\r\n      allDay: event.allDay,\r\n      display: event.display,\r\n      place: event.extendedProps.place,\r\n      forceAllDay: event.forceAllDay,\r\n      color: event.color,\r\n    };\r\n\r\n    const eventInfo = {\r\n      start: selectedStartDate.toISO(),\r\n      end: selectedEndDate.toISO(),\r\n      importance,\r\n      title: title.trim() === '' ? '(제목없음)' : title,\r\n      allDay: allDay || isAllDay,\r\n      place,\r\n      forceAllDay: allDay,\r\n      color,\r\n    };\r\n    editEvent(editInfo.id, eventInfo);\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n  const handleTitle = event => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleAllDayChange = event => {\r\n    setAllDay(event.target.checked);\r\n  };\r\n\r\n  const handleimportanceChange = event => {\r\n    setImportance(event.target.checked);\r\n  };\r\n  const handlePlaceChange = event => {\r\n    setPlace(event.target.value);\r\n  };\r\n  const handleStartDateChange = date => {\r\n    setSelectedStartDate(date);\r\n  };\r\n\r\n  const handleEndDateChange = date => {\r\n    setSelectedEndDate(date);\r\n  };\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    marginIcon: {\r\n      marginLeft: 200,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  function nvl(str, defaultStr) {\r\n    if (typeof str === 'undefined' || str === null || str === '') str = '';\r\n    return str;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={true}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-view-dialog\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\" style={{ textAlign: 'left' }}>\r\n          {' '}\r\n          일정\r\n          <IconButton\r\n            className={classes.marginIcon}\r\n            aria-label=\"edit-button\"\r\n            onClick={() => {\r\n              setEditFlag(true);\r\n              setTitle(nvl(event.title));\r\n              setPlace(nvl(event.extendedProps?.place));\r\n              setSelectedStartDate(DateTime.fromISO(event.startStr));\r\n              setSelectedEndDate(DateTime.fromISO(event.endStr));\r\n              setAllDay(event.allDay);\r\n              setImportance(event.extendedProps.importance);\r\n            }}\r\n          >\r\n            <EditOutlinedIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"delete-button\"\r\n            onClick={() => {\r\n              deleteEvent(event.id);\r\n              handleClose();\r\n            }}\r\n          >\r\n            <DeleteOutlineIcon color=\"error\" />\r\n          </IconButton>\r\n          <IconButton aria-label=\"mail-button\">\r\n            <MailOutlineIcon color=\"primary\" />\r\n          </IconButton>\r\n          <IconButton aria-label=\"close\" onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        {editFlag && (\r\n          <>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <Container>\r\n                  <Grid container>\r\n                    <Input\r\n                      autoFocus\r\n                      placeholder=\"제목을 입력해주세요\"\r\n                      value={title}\r\n                      onChangeCapture={handleTitle}\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox checked={allDay} onChange={handleAllDayChange} name=\"allDay\" />\r\n                      }\r\n                      label=\"종일\"\r\n                    />\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox\r\n                          checked={importance}\r\n                          onChange={handleimportanceChange}\r\n                          name=\"importance\"\r\n                        />\r\n                      }\r\n                      label=\"중요\"\r\n                    />\r\n                  </Grid>\r\n                </Container>\r\n                <Container>\r\n                  <MuiPickersUtilsProvider utils={LuxonUtils}>\r\n                    <Grid container justify=\"space-around\">\r\n                      <DateTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"edit-datetime-picker\"\r\n                        label=\"시작 날짜 시간\"\r\n                        format=\"yyyy-MM-dd HH:mm:ss\"\r\n                        value={selectedStartDate}\r\n                        onChange={handleStartDateChange}\r\n                      />\r\n                      <DateTimePicker\r\n                        margin=\"normal\"\r\n                        id=\"end-datetime-picker\"\r\n                        label=\"끝 날짜 시간\"\r\n                        format=\"yyyy-MM-dd HH:mm:ss\"\r\n                        value={selectedEndDate}\r\n                        onChange={handleEndDateChange}\r\n                      />\r\n                    </Grid>\r\n                  </MuiPickersUtilsProvider>\r\n                </Container>\r\n                <Container>\r\n                  <Input\r\n                    placeholder=\"장소를 입력해주세요\"\r\n                    value={place}\r\n                    onChange={handlePlaceChange}\r\n                  />\r\n                </Container>\r\n                <Container>\r\n                  <ColorPalette palette={palette} value={color} onSelect={setColor} />\r\n                </Container>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"secondary\">\r\n                취소\r\n              </Button>\r\n              <Button onClick={handleSave} color=\"primary\">\r\n                저장\r\n              </Button>\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n        {editFlag === false && (\r\n          <DialogContent style={{ height: '200px' }} dividers>\r\n            <Container>{event.title}</Container>\r\n            <Container>{`${event.startStr} - ${event.endStr}`}</Container>\r\n            <Container>{event.importance}</Container>\r\n            <Container>{event.allDay}</Container>\r\n            <Container>{event.extendedProps?.place}</Container>\r\n          </DialogContent>\r\n        )}\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ViewDialog = ViewDialogComponent;\r\n","import axios from 'axios';\r\nimport localforage from 'localforage';\r\n\r\nasync function getHoliday(calendarId, apiKey, start, end) {\r\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?key=${apiKey}&timeMin=${start}&timeMax=${end}&singleEvents=true&maxResults=9999`;\r\n\r\n  const value = await localforage.getItem(url);\r\n  if (value) return value;\r\n\r\n  const response = await axios.get(url);\r\n  if (response.status === 200) {\r\n    localforage.setItem(url, response.data);\r\n    return response.data;\r\n  }\r\n  return { items: [] };\r\n}\r\n\r\nexport { getHoliday };\r\n","import React, { useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport luxonPlugin from '@fullcalendar/luxon';\r\nimport rrulePlugin from '@fullcalendar/rrule';\r\nimport { getLunar } from 'holiday-kr';\r\nimport { Hidden } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { DateTime } from 'luxon';\r\nimport datetime from '../utils/datetime';\r\nimport { CreateDialog } from './createDialog';\r\nimport { ViewDialog } from './viewDialog';\r\nimport { getHoliday } from '../utils/apicall';\r\n\r\nlet touchStartX = 0;\r\nlet touchStartY = 0;\r\nlet touchEndX = 0;\r\nlet touchEndY = 0;\r\nlet touchStartTime = 0;\r\n\r\nconst Calendar = ({\r\n  setter,\r\n  calendarRef,\r\n  locale,\r\n  lunar,\r\n  holiday,\r\n  country,\r\n  minDurationMinutes,\r\n  slotDuration,\r\n  focusDate,\r\n  events,\r\n  addEvent,\r\n  changeEvent,\r\n  deleteEvent,\r\n  editEvent,\r\n  categoryList,\r\n  googleApiKey,\r\n  selectLongPressDelay,\r\n}) => {\r\n  const [createDialogOpen, setCreateDialogOpen] = React.useState(false);\r\n  const [viewDialogOpen, setViewDialogOpen] = React.useState(false);\r\n  const [defaultSettings, setDefaultSettings] = React.useState({});\r\n  const [event, setEvent] = React.useState({});\r\n  const [holidayList, setHolidayList] = React.useState([]);\r\n\r\n  // - START OF SWIPE EVENT\r\n  const handleGesture = React.useCallback(() => {\r\n    if (calendarRef.current) {\r\n      const touchedTime = touchStartTime.diffNow();\r\n      if (-touchedTime.milliseconds < selectLongPressDelay) {\r\n        const deltaX = Math.abs(touchEndX - touchStartX);\r\n        const deltaY = Math.abs(touchEndY - touchStartY);\r\n        if (touchEndX <= touchStartX && deltaX > deltaY * 2) {\r\n          calendarRef.current.getApi().next();\r\n        }\r\n        if (touchEndX >= touchStartX && deltaX > deltaY * 2) {\r\n          calendarRef.current.getApi().prev();\r\n        }\r\n      }\r\n    }\r\n  }, [calendarRef, selectLongPressDelay]);\r\n\r\n  const handleTouchStart = React.useCallback(e => {\r\n    touchStartX = e.changedTouches[0].screenX;\r\n    touchStartY = e.changedTouches[0].screenY;\r\n    touchStartTime = DateTime.local();\r\n  }, []);\r\n\r\n  const handleTouchEnd = React.useCallback(\r\n    e => {\r\n      touchEndX = e.changedTouches[0].screenX;\r\n      touchEndY = e.changedTouches[0].screenY;\r\n      handleGesture();\r\n    },\r\n    [handleGesture],\r\n  );\r\n  // - END OF SWIPE EVENT\r\n\r\n  useEffect(() => {\r\n    if (calendarRef.current) {\r\n      const height = isNaN(window.innerHeight) ? window.clientHeight : window.innerHeight;\r\n      calendarRef.current.getApi().setOption('height', height - 85 > 700 ? 700 : height - 85);\r\n\r\n      document.querySelector('#calendar-layout').addEventListener('touchstart', handleTouchStart);\r\n      document.querySelector('#calendar-layout').addEventListener('touchend', handleTouchEnd);\r\n\r\n      return () => {\r\n        document\r\n          .querySelector('#calendar-layout')\r\n          .removeEventListener('touchstart', handleTouchStart);\r\n        document.querySelector('#calendar-layout').removeEventListener('touchend', handleTouchEnd);\r\n      };\r\n    }\r\n    return null;\r\n  }, [calendarRef, handleTouchEnd, handleTouchStart]);\r\n\r\n  function handleEventClick(clickInfo) {\r\n    setEvent(clickInfo.event);\r\n    setViewDialogOpen(true);\r\n  }\r\n\r\n  function handleDateSelect(selectInfo) {\r\n    const start = selectInfo.start.toISOString();\r\n    const end = selectInfo.end.toISOString();\r\n    const { allDay } = selectInfo;\r\n    setDefaultSettings({ start, end, allDay });\r\n    setCreateDialogOpen(true);\r\n  }\r\n\r\n  function handleDateClick(info) {\r\n    const { allDay } = info;\r\n    const start = DateTime.fromISO(info.dateStr);\r\n    let end = '';\r\n    // month\r\n    if (info.view.type.includes('dayGrid') || allDay) {\r\n      end = start.plus({ days: 1 });\r\n    } else {\r\n      end = start.plus({ minutes: minDurationMinutes });\r\n    }\r\n    setDefaultSettings({ start, end, allDay });\r\n    setCreateDialogOpen(true);\r\n  }\r\n\r\n  function handleEventChange(changeInfo) {\r\n    const { oldEvent, event } = changeInfo;\r\n    changeEvent(oldEvent.id, event);\r\n  }\r\n\r\n  function getStartTime(startStr) {\r\n    const time = startStr.split('T')[1];\r\n    return time.split(':00+')[0];\r\n  }\r\n\r\n  function renderEventContent(eventContent) {\r\n    const ext = eventContent.event.extendedProps;\r\n    return (\r\n      <>\r\n        <span\r\n          style={{\r\n            width: '5px',\r\n            flexShrink: 0,\r\n            backgroundColor: ext.tagColor,\r\n          }}\r\n        />\r\n        <EventContent className=\"event-content\">\r\n          <ScheduleTime>\r\n            {ext.importance && '★ '}\r\n            {!(eventContent.event.allDay || ext.forceAllDay)\r\n              ? getStartTime(eventContent.event.startStr)\r\n              : ''}\r\n          </ScheduleTime>\r\n          <ScheduleTitle>{eventContent.event.title}</ScheduleTitle>\r\n        </EventContent>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderHeaderContent(content) {\r\n    const { text } = content;\r\n    const color = content.dow === 0 ? 'red' : 'black';\r\n\r\n    if (content.view.type === 'dayGrid' || content.view.type === 'dayGridMonth') {\r\n      return (\r\n        <>\r\n          <span style={{ color }}>{datetime.getDayName(content.dow, locale)}</span>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <span style={{ color }}>{text}</span>\r\n        <Hidden xsDown>\r\n          <span\r\n            style={{\r\n              color: 'silver',\r\n              fontSize: 'smaller',\r\n              paddingLeft: '3px',\r\n            }}\r\n          >\r\n            {lunar && `(${getLunar(content.date).month}/${getLunar(content.date).day})`}\r\n          </span>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <span\r\n            style={{\r\n              color: 'silver',\r\n              fontSize: 'smaller',\r\n              paddingLeft: '3px',\r\n            }}\r\n          >\r\n            {lunar && `(${getLunar(content.date).day})`}\r\n          </span>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderDayContent(content) {\r\n    const color = content.dow === 0 ? 'red' : 'black';\r\n\r\n    if (content.view.type === 'timeGridWeek' || content.view.type === 'timeGridDay') {\r\n      return <></>;\r\n    }\r\n    return (\r\n      <>\r\n        <span style={{ color }}>{content.date.getDate()}</span>\r\n        <Hidden xsDown>\r\n          <span\r\n            style={{\r\n              color: 'silver',\r\n              fontSize: 'smaller',\r\n              paddingLeft: '3px',\r\n            }}\r\n          >\r\n            {lunar && `(${getLunar(content.date).month}/${getLunar(content.date).day})`}\r\n          </span>\r\n        </Hidden>\r\n        <Hidden smUp>\r\n          <span\r\n            style={{\r\n              color: 'silver',\r\n              fontSize: 'smaller',\r\n              paddingLeft: '3px',\r\n            }}\r\n          >\r\n            {lunar && `(${getLunar(content.date).day})`}\r\n          </span>\r\n        </Hidden>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function onUpdateDates(dateInfo) {\r\n    const focusInLuxon = datetime.toLuxon(focusDate);\r\n    const currentStart = datetime.toLuxon(dateInfo.view.currentStart);\r\n    const currentEnd = datetime.toLuxon(dateInfo.view.currentEnd);\r\n\r\n    // check if focusDate is inside view range\r\n    if (!(focusInLuxon >= currentStart && focusInLuxon <= currentEnd)) {\r\n      if (setter) setter.setFocusDate(currentStart.toISODate());\r\n    }\r\n    const viewType = dateInfo.view.type;\r\n    if (viewType === 'dayGridMonth') {\r\n      const { title } = dateInfo.view;\r\n      const [year, month] = title.split('/');\r\n      if (setter) setter.setTitle(`${year}년 ${month}월`);\r\n    } else if (viewType === 'timeGridDay') {\r\n      const [Y, M, D] = dateInfo.view.title.split('/');\r\n      if (setter) setter.setTitle(`${Y}년 ${M}월 ${D}일`);\r\n    } else {\r\n      const [start, end] = dateInfo.view.title.split(' – ');\r\n      const [startY, startM] = start.split('/');\r\n      const [endY, endM] = end.split('/');\r\n\r\n      if (startY === endY) {\r\n        if (startM === endM) {\r\n          if (setter) setter.setTitle(`${startY}년 ${startM}월`);\r\n        } else {\r\n          if (setter) setter.setTitle(`${startY}년 ${startM}월 - ${endM}월`);\r\n        }\r\n      } else {\r\n        if (setter) setter.setTitle(`${startY}년 ${startM}월 - ${endY}년 ${endM}월`);\r\n      }\r\n    }\r\n    getHoliday(\r\n      `${country}%23holiday%40group.v.calendar.google.com`,\r\n      googleApiKey,\r\n      `${currentStart.toISODate()}T00%3A00%3A00%2B09%3A00`,\r\n      `${currentEnd.toISODate()}T00%3A00%3A00%2B09%3A00`,\r\n    )\r\n      .then(data => {\r\n        const { items } = data;\r\n        const holidays = [];\r\n        items.forEach(item => {\r\n          holidays.push({\r\n            title: item.summary,\r\n            start: item.start.date,\r\n            end: item.end.date,\r\n            allDay: true,\r\n            color: 'red',\r\n            display: 'block',\r\n          });\r\n        });\r\n        setHolidayList(holidays);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n        setHolidayList([]);\r\n      });\r\n  }\r\n\r\n  function handleNavLinkDayClick(date) {\r\n    if (calendarRef && calendarRef.current) {\r\n      calendarRef.current.getApi().changeView('timeGrid', date);\r\n      if (setter) setter.setViewType('timeGridDay');\r\n    }\r\n  }\r\n\r\n  function handleUrlImport() {\r\n    const url = prompt('Enter iCal URL: ');\r\n    axios.get(url).then(data => console.log(data));\r\n  }\r\n\r\n  function handleSelectAllow(info) {\r\n    if (info.allDay) return true;\r\n    let { start, end, startStr, endStr } = info;\r\n    startStr = startStr.split('+')[0];\r\n    endStr = endStr.split('+')[0];\r\n    if (endStr.split('T')[1] === '00:00:00') {\r\n      return end - start <= 1000 * 60 * 60 * 24;\r\n    }\r\n    return endStr.split('T')[0] === startStr.split('T')[0];\r\n  }\r\n\r\n  return (\r\n    <div id=\"calendar-layout\">\r\n      <CalendarGlobalStyle />\r\n      <FullCalendar\r\n        ref={calendarRef}\r\n        plugins={[\r\n          dayGridPlugin,\r\n          timeGridPlugin,\r\n          interactionPlugin,\r\n          luxonPlugin,\r\n          rrulePlugin,\r\n          listPlugin,\r\n        ]}\r\n        headerToolbar={false}\r\n        locale={locale}\r\n        initialView=\"dayGridMonth\"\r\n        nowIndicator\r\n        titleFormat=\"{yyyy/MM/dd}\"\r\n        buttonIcons\r\n        firstDay={0}\r\n        navLinks\r\n        editable\r\n        selectable\r\n        selectMirror\r\n        dayMaxEvents\r\n        dayMaxEventRows={6}\r\n        slotDuration={{ ...{ minutes: minDurationMinutes }, ...{ slotDuration } }}\r\n        slotLabelInterval=\"01:00\"\r\n        slotEventOverlap={false}\r\n        events={holiday ? [...holidayList, ...events.slice()] : events.slice()}\r\n        select={handleDateSelect}\r\n        dateClick={handleDateClick}\r\n        eventContent={renderEventContent}\r\n        eventClick={handleEventClick}\r\n        eventChange={handleEventChange}\r\n        fixedWeekCount={false}\r\n        datesSet={onUpdateDates}\r\n        allDayText=\"종일\"\r\n        moreLinkText=\"\"\r\n        dayHeaderContent={renderHeaderContent}\r\n        dayCellContent={renderDayContent}\r\n        allDayMaintainDuration\r\n        navLinkDayClick={handleNavLinkDayClick}\r\n        unselectAuto\r\n        unselectCancel=\".MuiDialogContent-root\"\r\n        selectAllow={handleSelectAllow}\r\n        dragScroll={false}\r\n        progressiveEventRendering\r\n        selectLongPressDelay={selectLongPressDelay}\r\n      />\r\n      {createDialogOpen && (\r\n        <CreateDialog\r\n          defaultSettings={defaultSettings}\r\n          addEvent={addEvent}\r\n          setOpen={setCreateDialogOpen}\r\n          categoryList={categoryList}\r\n        />\r\n      )}\r\n      {viewDialogOpen && (\r\n        <ViewDialog\r\n          setOpen={setViewDialogOpen}\r\n          event={event}\r\n          deleteEvent={deleteEvent}\r\n          editEvent={editEvent}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nCalendar.defaultProps = {\r\n  focusDate: new Date(),\r\n  country: 'en.usa', // ko.south_korea\r\n};\r\n\r\nconst EventContent = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  font-size: 0.625rem;\r\n  line-height: 0.94rem;\r\n`;\r\nconst ScheduleTime = styled.span`\r\n  display: inline-flex;\r\n  margin-left: 2px;\r\n  font-weight: 700;\r\n  &:only-of-type {\r\n    line-height: 1.125rem;\r\n  }\r\n`;\r\nconst ScheduleTitle = styled.span`\r\n  margin-left: 2px;\r\n  &:only-of-type {\r\n    line-height: 1.125rem;\r\n  }\r\n`;\r\n\r\nconst CalendarGlobalStyle = createGlobalStyle`\r\n.fc-event-main {\r\n  display: flex;\r\n  padding: 0;\r\n  min-height: 1.125rem;\r\n}\r\n`;\r\nexport default Calendar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const sidebarStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  title: {\r\n    marginRight: '25px',\r\n  },\r\n  yearMonth: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n","const languageSet = {\r\n  month: '월',\r\n  week: '주',\r\n  day: '일',\r\n  list: '목록',\r\n  calendar: '캘린더',\r\n  today: '오늘',\r\n  lunar: '음력',\r\n  holiday: '공휴일',\r\n  defaultCalendar: '기본 캘린더',\r\n  importCalendar: '캘린더 불러오기',\r\n  newCalendar: '새 캘린더 추가',\r\n  'enter-new-category': '새 캘린더 이름 입력해주세요',\r\n  DELETE: '삭제',\r\n  'CHANGE-COLOR': '색 변경',\r\n  Ok: '확인',\r\n  Delete: '삭제',\r\n  Cancel: '취소',\r\n  Information: '정보',\r\n  'DELETE-CALENDAR': '캘린더 삭제',\r\n  'ASK-PROMPT-DELETE': '정말 삭제하시겠습니까?',\r\n  'INFO-DEFAULT-CALENDAR-DELETE': '기본 캘린더는 삭제 불가능합니다.',\r\n  'SELECT-COLOR': '색을 선택해주세요.',\r\n  'CANNOT-CREATE-DEFAULT-NAME': 'default라는 이름은 생성 할 수 없습니다.',\r\n};\r\n\r\nexport default { translation: languageSet };\r\n","const languageSet = {\r\n  calendar: 'Calendar',\r\n  defaultCalendar: 'My Calendar',\r\n  importCalendar: 'Import Calendar',\r\n  newCalendar: 'Add new calendar',\r\n  'enter-new-category': 'Enter new calendar name',\r\n  DELETE: 'Delete',\r\n  'CHANGE-COLOR': 'Change color',\r\n  'DELETE-CALENDAR': 'Delete calendar',\r\n  'ASK-PROMPT-DELETE': 'Do you really want to delete?',\r\n  'INFO-DEFAULT-CALENDAR-DELETE': 'Default calendar cannot be deleted.',\r\n  'SELECT-COLOR': 'Select color',\r\n  'CANNOT-CREATE-DEFAULT-NAME': 'Cannot create name default',\r\n};\r\n\r\nexport default { translation: languageSet };\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})(props => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'left',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus({ t, handleColorChange, handleDelete }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleClick}\r\n        color=\"inherit\"\r\n        aria-label=\"open dropdown menu\"\r\n        edge=\"start\"\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem\r\n          onClick={() => {\r\n            handleClose();\r\n            handleColorChange();\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <ColorLensIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary={t('CHANGE-COLOR')} />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem\r\n          onClick={() => {\r\n            handleClose();\r\n            handleDelete();\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <DeleteForeverIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary={t('DELETE')} />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ColorPalette } from 'material-ui-color';\r\n\r\nexport default function AlertDialog({\r\n  open,\r\n  handleClose,\r\n  handleOkClick,\r\n  title,\r\n  content,\r\n  okText,\r\n  cancelText,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">{content}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOkClick} color=\"primary\" autoFocus>\r\n          {okText}\r\n        </Button>\r\n        {cancelText && (\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            {cancelText}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function ColorPicker({\r\n  open,\r\n  initialColor,\r\n  handleClose,\r\n  handleOkClick,\r\n  title,\r\n  okText,\r\n  cancelText,\r\n  palette,\r\n}) {\r\n  const [color, setColor] = useState();\r\n  useEffect(() => {\r\n    if (open) setColor(initialColor);\r\n  }, [initialColor, open]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <ColorPalette palette={palette} value={color} onSelect={setColor} />\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => handleOkClick(color)} color=\"primary\" autoFocus>\r\n          {okText}\r\n        </Button>\r\n        {cancelText && (\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            {cancelText}\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { ko, en } from './index';\r\n\r\nconst init = () => {\r\n  i18n\r\n    .use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n      resources: {\r\n        en,\r\n        ko,\r\n      },\r\n      lng: 'en',\r\n      fallbackLng: 'en',\r\n\r\n      interpolation: {\r\n        escapeValue: false,\r\n      },\r\n    });\r\n};\r\n\r\nconst changeLanguage = language => {\r\n  i18n.changeLanguage(language);\r\n};\r\n\r\nexport { init, changeLanguage };\r\n","import React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { persist, create } from 'mobx-persist';\r\nimport clsx from 'clsx';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Button, Checkbox, Hidden } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { DateTime } from 'luxon';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Calendar from './components/calendar';\r\nimport { sidebarStyles } from './styles/sidebar';\r\nimport { init as initi18n, changeLanguage } from './i18n/init';\r\nimport { randomChoice } from './utils/etc';\r\nimport CustomizedMenus from './components/customizedMenu';\r\nimport AlertDialog, { ColorPicker } from './components/confirm';\r\n\r\niniti18n();\r\nconst data = observable({\r\n  maxId: 0,\r\n  events: [],\r\n  categories: [],\r\n});\r\n\r\nconst schema = {\r\n  maxId: true,\r\n  categories: { type: 'list', schema: { name: true, show: true, color: true } },\r\n  events: {\r\n    type: 'list',\r\n    schema: {\r\n      id: true,\r\n      title: true,\r\n      start: true,\r\n      end: true,\r\n      allDay: true,\r\n      display: true,\r\n      place: true,\r\n      forceAllDay: true,\r\n      color: true,\r\n      category: true,\r\n      importance: true,\r\n    },\r\n  },\r\n};\r\n\r\nconst store = persist(schema)(data);\r\n\r\nconst hydrate = create();\r\nhydrate('zerostrengthCalendar', store);\r\n\r\n// actions\r\nfunction addEvent(event) {\r\n  store.events.push({ ...event, ...{ id: store.maxId } });\r\n  store.maxId += 1;\r\n}\r\nfunction changeEvent(id, changeInfo) {\r\n  store.events.forEach(item => {\r\n    if (Number(item.id) === Number(id)) {\r\n      const start = DateTime.fromISO(changeInfo.startStr);\r\n      const end = DateTime.fromISO(changeInfo.endStr);\r\n      const isAllDay = (end - start) / (60 * 60 * 1000) >= 24;\r\n      item.start = start.toISO();\r\n      item.end = end.toISO();\r\n      item.allDay = item.forceAllDay || isAllDay;\r\n    }\r\n  });\r\n}\r\nfunction deleteEvent(id) {\r\n  for (let i = 0; i < store.events.length; i += 1) {\r\n    if (Number(store.events[i].id) === Number(id)) {\r\n      store.events.splice(i, 1);\r\n      return;\r\n    }\r\n  }\r\n}\r\nfunction editEvent(id, editInfo) {\r\n  for (let i = 0; i < store.events.length; i += 1) {\r\n    if (Number(store.events[i].id) === Number(id)) {\r\n      store.events[i].title = editInfo.title;\r\n      store.events[i].startStr = editInfo.startStr;\r\n      store.events[i].endStr = editInfo.endStr;\r\n      store.events[i].place = editInfo.place;\r\n      store.events[i].importance = editInfo.importance;\r\n    }\r\n  }\r\n}\r\nconst palette = {\r\n  IndianRed: '#CD5C5C',\r\n  Crimson: '#DC143C',\r\n  Tomato: '#FF6347',\r\n  Gold: '#FFD700',\r\n  Magenta: '#FF00FF',\r\n  RebeccaPurple: '#663399',\r\n  Indigo: '#4B0082',\r\n  Lime: '#00FF00',\r\n  ForestGreen: '#228B22',\r\n  SaddleBrown: '#8B4513',\r\n};\r\n\r\nfunction addCategory(categoryName) {\r\n  const f = store.categories.filter(item => item.name === categoryName);\r\n  if (f.length === 0) {\r\n    const paletteKeys = Object.keys(palette);\r\n    const colorName = randomChoice(paletteKeys);\r\n    store.categories.push({ name: categoryName, show: true, color: palette[colorName] });\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction deleteCategory(categoryName) {\r\n  // delete category\r\n  const newCategoryList = store.categories.filter(item => item.name !== categoryName);\r\n  store.categories = newCategoryList;\r\n\r\n  // delete events with this category\r\n  const newEvents = store.events.filter(item => item.category !== categoryName);\r\n  store.events = newEvents;\r\n}\r\n\r\nfunction changeCategoryColor(categoryName, color) {\r\n  // change category color\r\n  let i = 0;\r\n  for (; i < store.categories.length; i += 1) {\r\n    if (store.categories[i].name === categoryName) {\r\n      break;\r\n    }\r\n  }\r\n  const newObj = { ...store.categories[i], ...{ color } };\r\n  store.categories.splice(i, 1, newObj);\r\n\r\n  // TODO: change events' calendar color\r\n}\r\n\r\nfunction filterEvents(events) {\r\n  if (store.categories.length === 0) addCategory('default');\r\n  const categoriesToShow = store.categories.filter(item => item.show === true);\r\n  const categoryList = categoriesToShow.map(item => item.name);\r\n\r\n  const newEvents = events\r\n    .filter(item => categoryList.includes(item.category))\r\n    .map(item => {\r\n      return {\r\n        ...item,\r\n        ...{\r\n          backgroundColor: item.color,\r\n          tagColor: store.categories.find(a => a.name === item.category).color || 'black',\r\n        },\r\n      };\r\n    });\r\n  return newEvents;\r\n}\r\n\r\nconst App = observer(() => {\r\n  const classes = sidebarStyles();\r\n  const [state, setState] = React.useState({ left: false });\r\n  const ref = React.createRef(); // calendar ref\r\n  const [title, setTitle] = React.useState('');\r\n  const [viewType, setViewType] = useLocalStorage('calendarViewType', 'dayGridMonth');\r\n  const [lunar, setLunar] = useLocalStorage('calendarLunar', 'false');\r\n  const [holiday, setHoliday] = useLocalStorage('calendarHoliday', 'true');\r\n  const [focusDate, setFocusDate] = useLocalStorage(\r\n    'calendarFocusDate',\r\n    DateTime.local().toISODate(),\r\n  );\r\n  const [language, setLanguage] = useLocalStorage('calendarLanguage', 'en');\r\n  const [alert, setAlert] = React.useState({ open: false });\r\n  const [colorPopup, setColorPopup] = React.useState({ open: false });\r\n  const { t } = useTranslation();\r\n\r\n  React.useEffect(() => {\r\n    changeLanguage(language);\r\n  }, [language]);\r\n\r\n  React.useEffect(() => {\r\n    ref.current.getApi().changeView(viewType);\r\n    ref.current.getApi().gotoDate(focusDate);\r\n  }, [ref, focusDate, viewType]);\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    ref.current.getApi().prev();\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    ref.current.getApi().next();\r\n  };\r\n\r\n  const handleTodayClick = () => {\r\n    ref.current.getApi().today();\r\n    setFocusDate(DateTime.local().toISODate());\r\n  };\r\n\r\n  const handleViewChange = e => {\r\n    setViewType(e.target.value);\r\n  };\r\n\r\n  const handleLunarChange = e => {\r\n    setLunar(String(e.target.checked));\r\n  };\r\n\r\n  const handleHolidayChange = e => {\r\n    setHoliday(String(e.target.checked));\r\n  };\r\n\r\n  const handleCategoryChange = (e, name) => {\r\n    const { checked } = e.target;\r\n    const target = store.categories.filter(item => item.name === name);\r\n    if (target.length === 1) {\r\n      target[0].show = checked;\r\n    }\r\n  };\r\n\r\n  const Sider = anchor => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <Hidden smUp>\r\n        <List>\r\n          {[\r\n            [t('month'), 'dayGridMonth'],\r\n            [t('week'), 'timeGridWeek'],\r\n            [t('day'), 'timeGridDay'],\r\n            [t('list'), 'listWeek'],\r\n          ].map((item, index) => (\r\n            <ListItem\r\n              selected={viewType === item[1]}\r\n              button\r\n              key={index}\r\n              onClick={() => setViewType(item[1])}\r\n            >\r\n              {item[0]}\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n      </Hidden>\r\n      <List>\r\n        <ListItem>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={lunar === 'true'}\r\n                onChange={handleLunarChange}\r\n                name=\"lunar_check\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label={t('lunar')}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={holiday === 'true'}\r\n                onChange={handleHolidayChange}\r\n                name=\"holiday_check\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label={t('holiday')}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {store.categories.map(category => (\r\n          <ListItem key={category.name}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={category.show}\r\n                  name={category.name}\r\n                  onChange={e => handleCategoryChange(e, category.name)}\r\n                  style={{\r\n                    color: category.color || 'black',\r\n                  }}\r\n                />\r\n              }\r\n              label={category.name === 'default' ? t('defaultCalendar') : category.name}\r\n            />\r\n            <CustomizedMenus\r\n              t={t}\r\n              handleDelete={() => {\r\n                if (category.name === 'default') {\r\n                  setAlert({\r\n                    open: true,\r\n                    title: t('Information'),\r\n                    content: t('INFO-DEFAULT-CALENDAR-DELETE'),\r\n                    okText: t('Ok'),\r\n                    handleOkClick: () => {},\r\n                  });\r\n                } else {\r\n                  setAlert({\r\n                    open: true,\r\n                    title: t('DELETE-CALENDAR'),\r\n                    content: t('ASK-PROMPT-DELETE'),\r\n                    okText: t('Delete'),\r\n                    cancelText: t('Cancel'),\r\n                    handleOkClick: () => deleteCategory(category.name),\r\n                  });\r\n                }\r\n              }}\r\n              handleColorChange={() => {\r\n                setColorPopup({\r\n                  open: true,\r\n                  title: t('SELECT-COLOR'),\r\n                  initialColor: category.color,\r\n                  okText: t('Ok'),\r\n                  cancelText: t('Cancel'),\r\n                  handleOkClick: color => {\r\n                    changeCategoryColor(category.name, color);\r\n                  },\r\n                });\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n        <ListItem>\r\n          <Button\r\n            onClick={() => {\r\n              const name = prompt(t('enter-new-category'));\r\n              if (name.trim() !== '') {\r\n                if (name.trim() === 'default') {\r\n                  setAlert({\r\n                    open: true,\r\n                    title: t('CANNOT-CREATE-DEFAULT-NAME'),\r\n                    okText: t('Ok'),\r\n                    handleOkClick: () => {},\r\n                  });\r\n                } else {\r\n                  addCategory(name.trim());\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            + {t('newCalendar')}\r\n          </Button>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        <ListItem>{t('importCalendar')}</ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[\r\n          ['English', 'en'],\r\n          ['Korean', 'ko'],\r\n        ].map((item, index) => (\r\n          <ListItem\r\n            selected={language === item[1]}\r\n            button\r\n            key={index}\r\n            onClick={() => setLanguage(item[1])}\r\n          >\r\n            {item[0]}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={toggleDrawer('left', true)}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Hidden xsDown>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {t('calendar')}\r\n            </Typography>\r\n            <IconButton\r\n              onClick={handleTodayClick}\r\n              color=\"inherit\"\r\n              aria-label=\"today-button\"\r\n              edge=\"start\"\r\n            >\r\n              {t('today')}\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handlePrevClick}\r\n              color=\"inherit\"\r\n              aria-label=\"arrow-left\"\r\n              edge=\"start\"\r\n            >\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleNextClick}\r\n              color=\"inherit\"\r\n              aria-label=\"arrow-right\"\r\n              edge=\"start\"\r\n            >\r\n              <NavigateNextIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n          <Typography variant=\"h6\" className={classes.yearMonth}>\r\n            {title}\r\n          </Typography>\r\n          <Hidden xsDown>\r\n            <Select\r\n              labelId=\"language-change-label\"\r\n              id=\"language-change-id\"\r\n              value={language}\r\n              onChange={e => {\r\n                setLanguage(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"en\">English</MenuItem>\r\n              <MenuItem value=\"ko\">Korean</MenuItem>\r\n            </Select>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={viewType}\r\n              onChange={handleViewChange}\r\n            >\r\n              <MenuItem value=\"dayGridMonth\">월</MenuItem>\r\n              <MenuItem value=\"timeGridWeek\">주</MenuItem>\r\n              <MenuItem value=\"timeGridDay\">일</MenuItem>\r\n              <MenuItem value=\"listWeek\">목록</MenuItem>\r\n            </Select>\r\n          </Hidden>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <>\r\n        <SwipeableDrawer\r\n          anchor=\"left\"\r\n          open={state.left}\r\n          onClose={toggleDrawer('left', false)}\r\n          onOpen={toggleDrawer('left', true)}\r\n        >\r\n          {Sider('left')}\r\n        </SwipeableDrawer>\r\n      </>\r\n      <main style={{ marginTop: '75px', marginLeft: '20px', marginRight: '20px' }}>\r\n        <Calendar\r\n          minDurationMinutes={30}\r\n          setter={{ setTitle, setViewType, setFocusDate }}\r\n          lunar={lunar === 'true'}\r\n          holiday={holiday === 'true'}\r\n          calendarRef={ref}\r\n          locale={language}\r\n          focusDate={focusDate}\r\n          events={filterEvents(store.events)}\r\n          categoryList={store.categories.map(item => item.name)}\r\n          changeEvent={changeEvent}\r\n          addEvent={addEvent}\r\n          deleteEvent={deleteEvent}\r\n          editEvent={editEvent}\r\n          googleApiKey=\"AIzaSyCWLalUqC46xX50wv6oBZiDUjWN4nJnAoE\"\r\n          country=\"en.usa\"\r\n          selectLongPressDelay={1000}\r\n        />\r\n      </main>\r\n      <AlertDialog\r\n        open={alert.open}\r\n        title={alert.title}\r\n        content={alert.content}\r\n        okText={alert.okText}\r\n        cancelText={alert.cancelText}\r\n        handleOkClick={() => {\r\n          alert.handleOkClick();\r\n          setAlert({ ...alert, ...{ open: false } });\r\n        }}\r\n        handleClose={() => {\r\n          setAlert({ ...alert, ...{ open: false } });\r\n        }}\r\n      />\r\n      <ColorPicker\r\n        palette={palette}\r\n        open={colorPopup.open}\r\n        title={colorPopup.title}\r\n        okText={colorPopup.okText}\r\n        cancelText={colorPopup.cancelText}\r\n        handleOkClick={color => {\r\n          colorPopup.handleOkClick(color);\r\n          setColorPopup({ ...colorPopup, ...{ open: false } });\r\n        }}\r\n        handleClose={() => {\r\n          setColorPopup({ ...colorPopup, ...{ open: false } });\r\n        }}\r\n        initialColor={colorPopup.initialColor}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","export function randomChoice(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}